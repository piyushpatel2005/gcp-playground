name: 'Terraform Deployment'
on: 
  push:
    branches: ["main", "master"]
  pull_request:

defaults:
      run:
        shell: bash

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 'Terraform Init'
        run: terraform -chdir="./tf-examples/gcp-bucket" init
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ env.GOOGLE_PROJECT }}
      
      # - name: 'Terraform Format'
      #   run: terraform -chdir="./tf-examples/gcp-bucket" fmt -check

      - name: 'Variable check'
        run: |
          echo "repository variable : $REPOSITORY_VAR"
          echo "organization variable : $ORGANIZATION_VAR"
          echo "overridden variable : $OVERRIDE_VAR"
          echo "variable from shell environment : $env_var" 
          echo "variable GOOGLE_PROJECT= $GOOGLE_PROJECT"
        env:
          REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
          ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
          OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
      # - name: 'Terraform Plan'
      #   run: terraform -chdir="./tf-examples/gcp-bucket" plan
      #   timeout-minutes: 1
      #   env:
      #     GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
      #     GOOGLE_PROJECT: ${{ env.GOOGLE_PROJECT }}

      # - name: 'Terraform Apply'
      #   run: terraform -chdir="./tf-examples/gcp-bucket" apply -auto-approve
      #   timeout-minutes: 1
      #   env:
      #     GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
      #     GOOGLE_PROJECT: ${{ env.GOOGLE_PROJECT }}