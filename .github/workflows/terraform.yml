name: 'Terraform Deployment'
on: 
  push:
    branches: ["main", "build"]
  pull_request:

defaults:
      run:
        shell: bash

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 'Terraform Init'
        run: terraform -chdir="./tf-examples/gcp-bucket" init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
      
      # - name: 'Terraform Format'
      #   run: terraform -chdir="./tf-examples/gcp-bucket" fmt -check


      - name: 'Terraform Plan'
        run: echo project=$GOOGLE_PROJECT && terraform -chdir="./tf-examples/gcp-bucket" plan -var project=$GOOGLE_PROJECT
        timeout-minutes: 1
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}

      - name: 'Terraform Apply'
        run: terraform -chdir="./tf-examples/gcp-bucket" apply -var project=$GOOGLE_PROJECT -auto-approve
        timeout-minutes: 1
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}

      - name: 'Terraform Destroy'
        run: sleep 60 && terraform -chdir="./tf-examples/gcp-bucket" destroy -var project=$GOOGLE_PROJECT -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TF_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}